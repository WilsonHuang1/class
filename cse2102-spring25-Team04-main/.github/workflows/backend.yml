name: Pet Adoption API CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Create and activate virtual environment  
      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Upgrade pip in virtual environment
      - name: Upgrade pip
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip

      # Install dependencies including testing tools
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pylint pytest pytest-cov

      # Run linting
      - name: Lint with pylint
        run: |
          source venv/bin/activate
          pylint --disable=C0111,C0103 main.py services util models

      # Run tests with pytest and generate coverage report
      - name: Test with pytest
        run: |
          source venv/bin/activate
          pytest tests/ --cov=. --cov-report=xml

      # Upload coverage report to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub if pushing to Docker Hub (optional)
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build and push Docker image (push only on main/develop)
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/team04_pet_adoption:${{ github.ref == 'refs/heads/main' && 'latest' || 'develop' }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/team04_pet_adoption:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/team04_pet_adoption:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production
        run: echo "Deploying to production server"
        # Add actual deployment steps here, for example:
        # - SSH into server and pull the latest image
        # - Restart the container with new image
        # - Run database migrations if needed

      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          # Add verification steps here, for example:
          # - Health check API endpoint
          # - Basic smoke tests
